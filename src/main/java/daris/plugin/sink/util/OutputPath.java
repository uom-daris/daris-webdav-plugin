package daris.plugin.sink.util;

import arc.xml.XmlDoc;

public class OutputPath {

    public static String getOutputPath(String rootDir, String assetSpecificOutputPath, String contextualOutputPath,
            XmlDoc.Element assetMeta, boolean unarchive) throws Throwable {

        String ext = assetMeta == null ? null : assetMeta.value("content/type/@ext");
        String assetId = assetMeta == null ? null : assetMeta.value("@id");
        String assetPath = assetMeta == null ? null : assetMeta.value("path");
        String assetName = assetMeta == null ? null : assetMeta.value("name");
        String assetNamespace = assetMeta == null ? null : assetMeta.value("namespace");

        StringBuilder sb = new StringBuilder();
        if (rootDir != null) {
            sb.append(rootDir.replaceAll("\\\\+", "/").replaceAll("\\/{2,}", "\\/").replaceAll("\\/+$", ""));
        }

        if (assetSpecificOutputPath != null) {
            if (sb.length() > 0) {
                sb.append("/");
            }
            sb.append(assetSpecificOutputPath.replaceAll("\\\\+", "/").replaceAll("\\/{2,}", "\\/")
                    .replaceAll("^\\/+", "").replaceAll("\\/+$", ""));
        } else if (contextualOutputPath != null) {
            // contextualOutputPath is usually asset.namespace if called by
            // asset.get; or path generated by shopping.cart services
            if (sb.length() > 0) {
                sb.append("/");
            }
            sb.append(contextualOutputPath.replaceAll("\\\\+", "/").replaceAll("\\/{2,}", "\\/").replaceAll("^\\/+", "")
                    .replaceAll("\\/+$", ""));
            if (assetNamespace != null
                    && contextualOutputPath.replaceAll("^\\/+", "").equals(assetNamespace.replaceAll("^\\/+", ""))) {
                if (assetName != null) {
                    sb.append("/").append(assetName);
                } else {
                    sb.append("/__asset_id__").append(assetId);
                }
            }
        } else if (assetPath != null) {
            if (sb.length() > 0) {
                sb.append("/");
            }
            sb.append(assetPath.replaceAll("\\\\+", "/").replaceAll("\\/{2,}", "\\/").replaceAll("^\\/+", "")
                    .replaceAll("\\/+$", ""));
        } else {
            if (sb.length() > 0) {
                sb.append("/");
            }
            if (assetNamespace != null) {
                sb.append(assetNamespace.replaceAll("\\\\+", "/").replaceAll("\\/{2,}", "\\/").replaceAll("^\\/+", "")
                        .replaceAll("\\/+$", ""));
                sb.append("/");
            }
            if (assetName != null) {
                sb.append(assetName);
            } else {
                sb.append("__asset_id__").append(assetId);
            }
        }
        String outputPath = sb.toString();
        if (outputPath.isEmpty()) {
            throw new Exception("Failed to generate output path.");
        }
        if (unarchive) {
            if (ext != null && (outputPath.endsWith("." + ext) || outputPath.endsWith("." + ext.toUpperCase()))) {
                outputPath = outputPath.substring(outputPath.length() - ext.length() - 1);
            }
        } else {
            if (ext != null && !(outputPath.endsWith("." + ext) || outputPath.endsWith("." + ext.toUpperCase()))) {
                outputPath = outputPath + "." + ext;
            }
        }
        return outputPath;
    }

}
